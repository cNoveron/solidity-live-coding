
/**
 *
 * autogenerated by solidity-visual-auditor
 *
 * execute with:
 *  #> truffle test <path/to/this/test.js>
 *
 * */
var PermanentlyBurnable_ERC721 = artifacts.require("../contracts/PermanentlyBurnable_ERC721.sol");

contract('PermanentlyBurnable_ERC721', (accounts) => {
    var creatorAddress = accounts[0];
    var firstOwnerAddress = accounts[1];
    var unprivilegedAddress = accounts[2];

    /* create named accounts for contract roles */
    const token = PermanentlyBurnable_ERC721.deployed()

    before(async () => {
        /* before tests */
        await token.mint(0, firstOwnerAddress, { from: creatorAddress })
        await token.burn(0, { from: unprivilegedAddress })
    })

    it('should revert if ...', () => {
        return token.mint(0, firstOwnerAddress, { from: creatorAddress })
            .then(result => {
                assert.fail();
            })
            .catch(error => {
                assert.notEqual(error.message, "assert.fail()", "Reason ...");
            });
    });

});
